Manual GWAS with GEMMA

Author: Johan Zicola
Date: 2018-01-17

Files needed:
-VCF file with the accessions to characterize
-text file containing the order of the accessions in the VCF file (order_accession.txt)
-file containing the phenotypes of interest with a column containing the name of the accession
as described in the vcf file. Alternatively, one can process directly a tsv file containing
the phenotype for interest with one value per row, with the same order than for the VCF file (no header)


For instance:

# Get list of accessions in vcf file
$ bcftool query -l myvcffile.vcf > order_accession.txt
$ cat order_accession.txt
1001
1002
1003

# Content of the phenotype file
$ cat phenotype.tsv 
12.3
13.4
15.3

The value 12.3, 13.4, 15.3 being the height of the accessions 1001, 1002, and 1003, respectively.

Softwares needed:
-python 2.7
-R (>3.3.0) with the libraries indicated in the scripts
-Unix/Mac OS X environment for manipulation in bash
-p-link (v1.07)
-vcftools (v0.1.14)
-gemma (v0.94)



Pipeline:

1. Generate a dataframe with all the variables generated by ChromatinJ and order the variables so that accessions are matching to VCF order. This is done in R with the script process_chromatinJ_output.R (see example output file test_export_df.txt in directory 'examples')
2. Generate a file for one phenotype from the previously generated dataframe (test_export_df.txt)  with the R script generate_phenotype_file.Rmd. The output is a file with a single column containing the phenotype of interest, scaled or not. See example files unscaled "Area_nucleus.tsv"
3. Process the phenotype file in through plink and gemma (run_gwas_gemma.sh).
This step should be run directly into the directory containing the vcf file and the phenotype file.
4. Import in R the output phenotype.assoc.clean.txt file to visualize GWAS results (script gemma_analysis.Rmd)

The part 1, 2, and 3 are done interactively in R (need to be adjusted according to the dataframe used)
The part 3 is automatic, the only variable being the input vcf file used (change path in the script file) and the phenotype file given as first argument in command line (eg. bash run_gwas_gemma.sh phenotype.tsv vcf_file.vcf)
The part 4 is done interactively in R


Modifications to provide by the user:

process_chromatinJ_output.Rmd
-Indicate path of the ChromatinJ output results files
-Indicate path to file containing the order of the accessions from the VCF file

generate_phenotype_file.Rmd (for the output of chromatinJ pipeline)
-Change the path of the file to import and indicate which phenotype is wanted and which name for this phenotype should be given

run_gwas_gemma.sh
-Provide the two arguments (path to phenotype file and path to VCF file)

gemma_analysis.Rmd
-Change dir_file and file.name variables



